"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toGraphQLError = toGraphQLError;
exports.getParseClassMutationConfig = exports.extractKeysAndInclude = void 0;

var _node = _interopRequireDefault(require("parse/node"));

var _apolloServerCore = require("apollo-server-core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function toGraphQLError(error) {
  let code, message;

  if (error instanceof _node.default.Error) {
    code = error.code;
    message = error.message;
  } else {
    code = _node.default.Error.INTERNAL_SERVER_ERROR;
    message = 'Internal server error';
  }

  return new _apolloServerCore.ApolloError(message, code);
}

const extractKeysAndInclude = selectedFields => {
  selectedFields = selectedFields.filter(field => !field.includes('__typename'));
  let keys = undefined;
  let include = undefined;

  if (selectedFields && selectedFields.length > 0) {
    keys = selectedFields.join(',');
    include = selectedFields.reduce((fields, field) => {
      fields = fields.slice();
      let pointIndex = field.lastIndexOf('.');

      while (pointIndex > 0) {
        const lastField = field.slice(pointIndex + 1);
        field = field.slice(0, pointIndex);

        if (!fields.includes(field) && lastField !== 'objectId') {
          fields.push(field);
        }

        pointIndex = field.lastIndexOf('.');
      }

      return fields;
    }, []).join(',');
  }

  return {
    keys,
    include
  };
};

exports.extractKeysAndInclude = extractKeysAndInclude;

const getParseClassMutationConfig = function (parseClassConfig) {
  return parseClassConfig && parseClassConfig.mutation || {};
};

exports.getParseClassMutationConfig = getParseClassMutationConfig;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9HcmFwaFFML3BhcnNlR3JhcGhRTFV0aWxzLmpzIl0sIm5hbWVzIjpbInRvR3JhcGhRTEVycm9yIiwiZXJyb3IiLCJjb2RlIiwibWVzc2FnZSIsIlBhcnNlIiwiRXJyb3IiLCJJTlRFUk5BTF9TRVJWRVJfRVJST1IiLCJBcG9sbG9FcnJvciIsImV4dHJhY3RLZXlzQW5kSW5jbHVkZSIsInNlbGVjdGVkRmllbGRzIiwiZmlsdGVyIiwiZmllbGQiLCJpbmNsdWRlcyIsImtleXMiLCJ1bmRlZmluZWQiLCJpbmNsdWRlIiwibGVuZ3RoIiwiam9pbiIsInJlZHVjZSIsImZpZWxkcyIsInNsaWNlIiwicG9pbnRJbmRleCIsImxhc3RJbmRleE9mIiwibGFzdEZpZWxkIiwicHVzaCIsImdldFBhcnNlQ2xhc3NNdXRhdGlvbkNvbmZpZyIsInBhcnNlQ2xhc3NDb25maWciLCJtdXRhdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVPLFNBQVNBLGNBQVQsQ0FBd0JDLEtBQXhCLEVBQStCO0FBQ3BDLE1BQUlDLElBQUosRUFBVUMsT0FBVjs7QUFDQSxNQUFJRixLQUFLLFlBQVlHLGNBQU1DLEtBQTNCLEVBQWtDO0FBQ2hDSCxJQUFBQSxJQUFJLEdBQUdELEtBQUssQ0FBQ0MsSUFBYjtBQUNBQyxJQUFBQSxPQUFPLEdBQUdGLEtBQUssQ0FBQ0UsT0FBaEI7QUFDRCxHQUhELE1BR087QUFDTEQsSUFBQUEsSUFBSSxHQUFHRSxjQUFNQyxLQUFOLENBQVlDLHFCQUFuQjtBQUNBSCxJQUFBQSxPQUFPLEdBQUcsdUJBQVY7QUFDRDs7QUFDRCxTQUFPLElBQUlJLDZCQUFKLENBQWdCSixPQUFoQixFQUF5QkQsSUFBekIsQ0FBUDtBQUNEOztBQUVNLE1BQU1NLHFCQUFxQixHQUFHQyxjQUFjLElBQUk7QUFDckRBLEVBQUFBLGNBQWMsR0FBR0EsY0FBYyxDQUFDQyxNQUFmLENBQ2ZDLEtBQUssSUFBSSxDQUFDQSxLQUFLLENBQUNDLFFBQU4sQ0FBZSxZQUFmLENBREssQ0FBakI7QUFHQSxNQUFJQyxJQUFJLEdBQUdDLFNBQVg7QUFDQSxNQUFJQyxPQUFPLEdBQUdELFNBQWQ7O0FBQ0EsTUFBSUwsY0FBYyxJQUFJQSxjQUFjLENBQUNPLE1BQWYsR0FBd0IsQ0FBOUMsRUFBaUQ7QUFDL0NILElBQUFBLElBQUksR0FBR0osY0FBYyxDQUFDUSxJQUFmLENBQW9CLEdBQXBCLENBQVA7QUFDQUYsSUFBQUEsT0FBTyxHQUFHTixjQUFjLENBQ3JCUyxNQURPLENBQ0EsQ0FBQ0MsTUFBRCxFQUFTUixLQUFULEtBQW1CO0FBQ3pCUSxNQUFBQSxNQUFNLEdBQUdBLE1BQU0sQ0FBQ0MsS0FBUCxFQUFUO0FBQ0EsVUFBSUMsVUFBVSxHQUFHVixLQUFLLENBQUNXLFdBQU4sQ0FBa0IsR0FBbEIsQ0FBakI7O0FBQ0EsYUFBT0QsVUFBVSxHQUFHLENBQXBCLEVBQXVCO0FBQ3JCLGNBQU1FLFNBQVMsR0FBR1osS0FBSyxDQUFDUyxLQUFOLENBQVlDLFVBQVUsR0FBRyxDQUF6QixDQUFsQjtBQUNBVixRQUFBQSxLQUFLLEdBQUdBLEtBQUssQ0FBQ1MsS0FBTixDQUFZLENBQVosRUFBZUMsVUFBZixDQUFSOztBQUNBLFlBQUksQ0FBQ0YsTUFBTSxDQUFDUCxRQUFQLENBQWdCRCxLQUFoQixDQUFELElBQTJCWSxTQUFTLEtBQUssVUFBN0MsRUFBeUQ7QUFDdkRKLFVBQUFBLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZYixLQUFaO0FBQ0Q7O0FBQ0RVLFFBQUFBLFVBQVUsR0FBR1YsS0FBSyxDQUFDVyxXQUFOLENBQWtCLEdBQWxCLENBQWI7QUFDRDs7QUFDRCxhQUFPSCxNQUFQO0FBQ0QsS0FiTyxFQWFMLEVBYkssRUFjUEYsSUFkTyxDQWNGLEdBZEUsQ0FBVjtBQWVEOztBQUNELFNBQU87QUFBRUosSUFBQUEsSUFBRjtBQUFRRSxJQUFBQTtBQUFSLEdBQVA7QUFDRCxDQXpCTTs7OztBQTJCQSxNQUFNVSwyQkFBMkIsR0FBRyxVQUFTQyxnQkFBVCxFQUEyQjtBQUNwRSxTQUFRQSxnQkFBZ0IsSUFBSUEsZ0JBQWdCLENBQUNDLFFBQXRDLElBQW1ELEVBQTFEO0FBQ0QsQ0FGTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQYXJzZSBmcm9tICdwYXJzZS9ub2RlJztcbmltcG9ydCB7IEFwb2xsb0Vycm9yIH0gZnJvbSAnYXBvbGxvLXNlcnZlci1jb3JlJztcblxuZXhwb3J0IGZ1bmN0aW9uIHRvR3JhcGhRTEVycm9yKGVycm9yKSB7XG4gIGxldCBjb2RlLCBtZXNzYWdlO1xuICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBQYXJzZS5FcnJvcikge1xuICAgIGNvZGUgPSBlcnJvci5jb2RlO1xuICAgIG1lc3NhZ2UgPSBlcnJvci5tZXNzYWdlO1xuICB9IGVsc2Uge1xuICAgIGNvZGUgPSBQYXJzZS5FcnJvci5JTlRFUk5BTF9TRVJWRVJfRVJST1I7XG4gICAgbWVzc2FnZSA9ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InO1xuICB9XG4gIHJldHVybiBuZXcgQXBvbGxvRXJyb3IobWVzc2FnZSwgY29kZSk7XG59XG5cbmV4cG9ydCBjb25zdCBleHRyYWN0S2V5c0FuZEluY2x1ZGUgPSBzZWxlY3RlZEZpZWxkcyA9PiB7XG4gIHNlbGVjdGVkRmllbGRzID0gc2VsZWN0ZWRGaWVsZHMuZmlsdGVyKFxuICAgIGZpZWxkID0+ICFmaWVsZC5pbmNsdWRlcygnX190eXBlbmFtZScpXG4gICk7XG4gIGxldCBrZXlzID0gdW5kZWZpbmVkO1xuICBsZXQgaW5jbHVkZSA9IHVuZGVmaW5lZDtcbiAgaWYgKHNlbGVjdGVkRmllbGRzICYmIHNlbGVjdGVkRmllbGRzLmxlbmd0aCA+IDApIHtcbiAgICBrZXlzID0gc2VsZWN0ZWRGaWVsZHMuam9pbignLCcpO1xuICAgIGluY2x1ZGUgPSBzZWxlY3RlZEZpZWxkc1xuICAgICAgLnJlZHVjZSgoZmllbGRzLCBmaWVsZCkgPT4ge1xuICAgICAgICBmaWVsZHMgPSBmaWVsZHMuc2xpY2UoKTtcbiAgICAgICAgbGV0IHBvaW50SW5kZXggPSBmaWVsZC5sYXN0SW5kZXhPZignLicpO1xuICAgICAgICB3aGlsZSAocG9pbnRJbmRleCA+IDApIHtcbiAgICAgICAgICBjb25zdCBsYXN0RmllbGQgPSBmaWVsZC5zbGljZShwb2ludEluZGV4ICsgMSk7XG4gICAgICAgICAgZmllbGQgPSBmaWVsZC5zbGljZSgwLCBwb2ludEluZGV4KTtcbiAgICAgICAgICBpZiAoIWZpZWxkcy5pbmNsdWRlcyhmaWVsZCkgJiYgbGFzdEZpZWxkICE9PSAnb2JqZWN0SWQnKSB7XG4gICAgICAgICAgICBmaWVsZHMucHVzaChmaWVsZCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHBvaW50SW5kZXggPSBmaWVsZC5sYXN0SW5kZXhPZignLicpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmaWVsZHM7XG4gICAgICB9LCBbXSlcbiAgICAgIC5qb2luKCcsJyk7XG4gIH1cbiAgcmV0dXJuIHsga2V5cywgaW5jbHVkZSB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFBhcnNlQ2xhc3NNdXRhdGlvbkNvbmZpZyA9IGZ1bmN0aW9uKHBhcnNlQ2xhc3NDb25maWcpIHtcbiAgcmV0dXJuIChwYXJzZUNsYXNzQ29uZmlnICYmIHBhcnNlQ2xhc3NDb25maWcubXV0YXRpb24pIHx8IHt9O1xufTtcbiJdfQ==